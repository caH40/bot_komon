import { teamLeaveDB } from '../controllersDB/team-leave.js';
import { mainMenuKeyboard, mobVsDesKeyboard } from '../keyboard/keyboard.js';
import { beingDeveloped } from '../modules/beingDeveloped.js';
import { myResults } from '../view/myresults/myresults-view.js';

import { scheduleView } from '../view/schedule/schedule-view.js';
import { listRiders } from '../view/team/riders-view.js';

import { handlerResults } from './menu-results/handler-results.js';
import { handlerTeam } from './menu-team/handler-menu.js';
import { teamChooseForJoin } from './menu-team/helper.js';
import { handlerAdmin } from './menu_admin/handler-menu.js';
import { account, getSchedule } from './helper-main.js';
import { getScheduleWeekly } from '../modules/schedule-weekle.js';

export async function handler(ctx, cbqData) {
	try {
		//–∏—Å–∫–ª—é—á–µ–Ω–∏–µ –±–∞–≥–æ–≤ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é
		if (!ctx.session.data) {
			ctx.session.data = {};
			ctx.session.data.messagesIdForDelete = [];
		}

		const messagesIdForDelete = ctx.session.data.messagesIdForDelete;
		const length = messagesIdForDelete.length;
		for (let index = 0; index < length; index++) {
			await ctx.deleteMessage(messagesIdForDelete[index]);
		}
		ctx.session.data.messagesIdForDelete = [];
		console.log(cbqData); //‚ùó‚ùó‚ùó
		// –ø–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é
		if (cbqData === 'main')
			return await ctx.editMessageText(
				`‚ùó<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–æ—Ä –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.</b>‚ùó`,
				await mainMenuKeyboard(ctx)
			);

		if (cbqData.includes('_m_3_1_V--myResults')) return await myResults(ctx, cbqData);
		if (cbqData.includes('_m_3_2_V--listRiders')) return await listRiders(ctx, cbqData);
		if (cbqData.includes('m_3_2_4_1_E--teamLeave_')) return await teamLeaveDB(ctx, cbqData);
		if (cbqData.includes('m_3_2_2_all_E__teamJoin_')) return await teamChooseForJoin(ctx, cbqData);
		// –ª–æ–≤–∏–º V-- –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
		if (cbqData.includes('V--')) {
			return await ctx.editMessageText(
				'<b>üë®‚Äçüíª –í—ã–±–æ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.</b>',
				mobVsDesKeyboard(cbqData)
			);
		}
		//–º–µ–Ω—é "–ö–æ–º–∞–Ω–¥–∞"
		if (cbqData.includes('m_3_2')) return await handlerTeam(ctx, cbqData);
		// –º–µ–Ω—é "–ê–¥–º–∏–Ω –∫–∞–±–∏–Ω–µ—Ç"
		if (cbqData.includes('m_4_')) return await handlerAdmin(ctx, cbqData);

		// ===========================================================================
		// –ø–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é
		if (cbqData === 'account_registration') return await ctx.scene.enter('firstSceneReg');

		// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ—Ç–∫–∏ –º–µ–Ω—é –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
		const isCompleted = await handlerResults(ctx, cbqData);
		if (isCompleted) return;

		if (cbqData === 'main_schedule') return await getSchedule(ctx);
		if (cbqData === 'm_1_V') return await getScheduleWeekly(ctx);

		if (cbqData === 'main_account') return await account(ctx);

		// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑ –∞–¥–º–∏–Ω –∫–∞–±–∏–Ω–µ—Ç–∞
		if (cbqData === 'admin_getProtocol') return await ctx.scene.enter('getProtocol');
		if (cbqData === 'admin_getSchedule') return await ctx.scene.enter('downloadSchedule');
		// –æ—Ç—Ä–∏c–æ–≤–∫–∞ —Ç–∞–±–ª–∏—Ü
		// —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
		if (cbqData.includes('schedule_')) return await scheduleView(ctx, cbqData);
		if (cbqData === 'clear') return;
		await beingDeveloped(ctx);
	} catch (error) {
		console.log(error);
	}
}
